#include "Queue.h"

Queue::Queue() {
    front = 0;
    rear = -1;
    count = 0;
}

bool Queue::enqueue(const String& item) {
    if (isFull()) return false;  // Queue full
    rear = (rear + 1) % QUEUE_SIZE;
    items[rear] = item;
    count++;
    return true;
}

String Queue::dequeue() {
    if (isEmpty()) return "Queue Empty";
    String item = items[front];
    front = (front + 1) % QUEUE_SIZE;
    count--;
    return item;
}

bool Queue::isEmpty() {
    return count == 0;
}

bool Queue::isFull() {
    return count == QUEUE_SIZE;
}

void Queue::printQueue() {
    Serial.print("Queue: ");
    for (int i = 0; i < count; i++) {
        int index = (front + i) % QUEUE_SIZE;
        Serial.print(items[index] + " | ");
    }
    Serial.println();
}
